name: Rename MP3 Files in audio/3 with New List

on:
  workflow_dispatch:
    inputs:
      commit_message:
        description: 'Commit message for file renaming'
        required: false
        default: 'Rename MP3 files in audio/3 based on new list starting from 44'

jobs:
  rename_files:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Checkout the Repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: main

      # Step 2: Debug audio/3 Folder Contents
      - name: List audio/3 Folder Contents
        run: |
          echo "Listing contents of audio/3 folder:"
          ls -la audio/3 || echo "audio/3 folder is empty or does not exist."

      # Step 3: Rename Files in audio/3
      - name: Rename Files
        run: |
          echo "Renaming files in audio/3..."
          # Define the mapping list as an array, starting from 44
          declare -A title_map=(
            ["Anarchy"]="44"
            ["December 13"]="45"
            ["Can't have you"]="46"
            ["Got a bitch a valve"]="47"
            ["Tom"]="48"
            ["Still can't swim"]="49"
            ["Well with her eff fame"]="50"
            ["Lili Fallon"]="51"
            ["Missing you"]="52"
            ["My girl"]="53"
            ["Forest"]="54"
            ["Flutter"]="55"
            ["No. 13 a bore"]="56"
            ["Partner"]="57"
            ["Something simple"]="58"
            ["Aperient flow"]="59"
            ["Six"]="60"
            ["Beethovenian"]="61"
            ["Outside"]="62"
            ["I think I am"]="63"
            ["Sound of tears"]="64"
            ["What's next?"]="65"
            ["Scribbling with a gun"]="66"
            ["I'm okay"]="67"
            ["Milou Christmas"]="68"
          )
          # Loop through MP3 files in audio/3
          for file in audio/3/*.mp3; do
            if [ -f "$file" ]; then
              # Extract title by removing leading number and non-alphanumeric chars
              filename=$(basename "$file" .mp3)
              title=$(echo "$filename" | sed 's/^[0-9]\+[^[:alnum:]]*//')
              echo "Processing file: $file (extracted title: $title)"
              # Convert title to lowercase for case-insensitive matching
              title_lower=$(echo "$title" | tr '[:upper:]' '[:lower:]')
              matched=false
              # Loop through title_map to find a match
              for list_title in "${!title_map[@]}"; do
                list_title_lower=$(echo "$list_title" | tr '[:upper:]' '[:lower:]')
                # Check if all significant words in list_title appear in title_lower
                match=true
                # Split list_title into words (ignoring spaces, punctuation)
                for word in $list_title_lower; do
                  if ! echo "$title_lower" | grep -q -w "$word"; then
                    match=false
                    break
                  fi
                done
                if [ "$match" = true ]; then
                  new_name="audio/3/${title_map[$list_title]}.mp3"
                  echo "Matched '$title' to '$list_title', renaming to $new_name"
                  mv "$file" "$new_name"
                  matched=true
                  break
                fi
              done
              if [ "$matched" = false ]; then
                echo "No match found for '$title'"
              fi
            fi
          done

      # Step 4: Debug audio/3 Folder After Renaming
      - name: List audio/3 Folder After Renaming
        run: |
          echo "Listing contents of audio/3 folder after renaming:"
          ls -la audio/3

      # Step 5: Configure Git User
      - name: Configure Git User
        run: |
          echo "Configuring Git user..."
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # Step 6: Commit and Push Changes
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Adding changes to git..."
          git add audio/3
          echo "Git status after add:"
          git status
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            echo "Committing changes..."
            git commit -m "${{ github.event.inputs.commit_message }}"
            echo "Pushing changes..."
            git push origin main
          fi