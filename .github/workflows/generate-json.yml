name: Rename MP3 Files in audio/11 with New List

on:
  workflow_dispatch:
    inputs:
      commit_message:
        description: 'Commit message for file renaming'
        required: false
        default: 'Rename MP3 files in audio/11 based on new list starting from 239'

jobs:
  rename_files:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Checkout the Repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: main

      # Step 2: Debug audio/11 Folder Contents
      - name: List audio/11 Folder Contents
        run: |
          echo "Listing contents of audio/11 folder:"
          ls -la audio/11 || echo "audio/11 folder is empty or does not exist."

      # Step 3: Rename Files in audio/11
      - name: Rename Files
        run: |
          echo "Renaming files in audio/11..."
          # Define the mapping list as an array, starting from 239
          declare -A title_map=(
            ["Eviction"]="239"
            ["Waste away"]="240"
            ["West to west"]="241"
            ["I'll never"]="242"
            ["Cave"]="243"
            ["Just let me go"]="244"
            ["Cheetah"]="245"
            ["Find me"]="246"
            ["Baby girl"]="247"
            ["My Hope"]="248"
            ["Someone asked"]="249"
            ["Let it go"]="250"
            ["Testa"]="251"
            ["Respiring"]="252"
            ["Pretty girl"]="253"
            ["Vacation"]="254"
            ["Heathrow"]="255"
            ["Benny"]="256"
            ["Beginning"]="257"
            ["Bedroom"]="258"
            ["Goodness"]="259"
            ["Sure we lit"]="260"
            ["Old door"]="261"
          )
          # Loop through MP3 files in audio/11
          for file in audio/11/*.mp3; do
            if [ -f "$file" ]; then
              # Extract title by removing leading number and non-alphanumeric chars
              filename=$(basename "$file" .mp3)
              title=$(echo "$filename" | sed 's/^[0-9]\+[^[:alnum:]]*//')
              echo "Processing file: $file (extracted title: $title)"
              # Convert title to lowercase for case-insensitive matching
              title_lower=$(echo "$title" | tr '[:upper:]' '[:lower:]')
              matched=false
              # Loop through title_map to find a match
              for list_title in "${!title_map[@]}"; do
                list_title_lower=$(echo "$list_title" | tr '[:upper:]' '[:lower:]')
                # Check if all significant words in list_title appear in title_lower
                match=true
                # Split list_title into words (ignoring spaces, punctuation)
                for word in $list_title_lower; do
                  if ! echo "$title_lower" | grep -q -w "$word"; then
                    match=false
                    break
                  fi
                done
                if [ "$match" = true ]; then
                  new_name="audio/11/${title_map[$list_title]}.mp3"
                  echo "Matched '$title' to '$list_title', renaming to $new_name"
                  mv "$file" "$new_name"
                  matched=true
                  break
                fi
              done
              if [ "$matched" = false ]; then
                echo "No match found for '$title'"
              fi
            fi
          done

      # Step 4: Debug audio/11 Folder After Renaming
      - name: List audio/11 Folder After Renaming
        run: |
          echo "Listing contents of audio/11 folder after renaming:"
          ls -la audio/11

      # Step 5: Configure Git User
      - name: Configure Git User
        run: |
          echo "Configuring Git user..."
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # Step 6: Commit and Push Changes
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Adding changes to git..."
          git add audio/11
          echo "Git status after add:"
          git status
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            echo "Committing changes..."
            git commit -m "${{ github.event.inputs.commit_message }}"
            echo "Pushing changes..."
            git push origin main
          fi