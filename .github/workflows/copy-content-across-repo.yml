name: Sync Content to audio Folder

on:
  push:
    branches:
      - main

jobs:
  sync_content:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Checkout the Destination Repository
      - name: Checkout Destination Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: main

      # Step 2: Clone the Source Repository
      - name: Clone Source Repository
        run: |
          echo "Cloning source repository..."
          git clone https://github.com/DbRDYZmMRu/Ut67QIwioF.git source-repo || echo "Failed to clone source repo. Check URL."

      # Step 3: Debug Source Repository Contents
      - name: List Source Repository Contents
        run: |
          echo "Listing contents of source-repo:"
          ls -laR source-repo || echo "Source repository is empty or not cloned."
          if [ -d "source-repo/pages/musicpool-db/mp3" ]; then
            echo "pages/musicpool-db/mp3 folder exists in source-repo."
            ls -laR source-repo/pages/musicpool-db/mp3
          else
            echo "pages/musicpool-db/mp3 folder does not exist in source-repo."
          fi

      # Step 4: Copy Source Folder Contents to audio
      - name: Copy Source Folder Contents to audio
        run: |
          echo "Creating audio directory..."
          mkdir -p audio
          if [ -d "source-repo/pages/musicpool-db/mp3" ]; then
            echo "Copying contents of source-repo/pages/musicpool-db/mp3 to audio..."
            cp -R source-repo/pages/musicpool-db/mp3/* audio/ || echo "Failed to copy source folder contents."
            echo "Listing contents of audio after copy:"
            ls -laR audio
          else
            echo "Source folder not found in source-repo. Skipping copy."
          fi

      # Step 5: Configure Git User
      - name: Configure Git User
        run: |
          echo "Configuring Git user..."
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # Step 6: Commit and Push Changes
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Adding audio to git..."
          git add audio
          echo "Git status after add:"
          git status
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            echo "Committing changes..."
            git commit -m 'Sync source folder contents to audio folder from source repository'
            echo "Pushing changes..."
            git push origin main
          fi