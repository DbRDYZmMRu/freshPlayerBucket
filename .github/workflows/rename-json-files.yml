name: Rename JSON Files and Colourful Light Folder in json

on:
  workflow_dispatch:
    inputs:
      commit_message:
        description: 'Commit message for renaming JSON files and Colourful Light folder'
        required: false
        default: 'Rename JSON files in json/Colourful Light to 14.json to 43.json, rename folder to json/2, and log missing files'

jobs:
  rename_files_and_folder:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Checkout the Repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: main

      # Step 2: Debug json Folder Contents
      - name: List json Folder Contents
        run: |
          echo "Listing contents of json folder:"
          ls -laR json || echo "json folder is empty or does not exist."
          shopt -s nocaseglob
          echo "Looking for folder matching Colourful Light (case-insensitive):"
          if ls json/[Cc][Oo][Ll][Oo][Uu][Rr][Ff][Uu][Ll][[:space:][:punct:]]*[Ll][Ii][Gg][Hh][Tt] 2>/dev/null; then
            folder=$(ls -d json/[Cc][Oo][Ll][Oo][Uu][Rr][Ff][Uu][Ll][[:space:][:punct:]]*[Ll][Ii][Gg][Hh][Tt] | head -n 1)
            echo "Found folder: $folder"
            ls -la "$folder"
          else
            echo "json/Colourful Light folder (any case) does not exist."
            echo "Listing all folders in json for debugging:"
            ls -lad json/*/ 2>/dev/null || echo "No subfolders in json."
          fi
          shopt -u nocaseglob

      # Step 3: Rename JSON Files in json/Colourful Light
      - name: Rename JSON Files
        run: |
          echo "Renaming JSON files in json/Colourful Light to 14.json to 43.json..."
          shopt -s nocaseglob
          folder=$(ls -d json/[Cc][Oo][Ll][Oo][Uu][Rr][Ff][Uu][Ll][[:space:][:punct:]]*[Ll][Ii][Gg][Hh][Tt] 2>/dev/null | head -n 1)
          if [ -n "$folder" ] && [ -d "$folder" ]; then
            # Define the mapping list as an array with adjusted numbers (1->14, 2->15, ..., 30->43)
            declare -A title_map=(
              ["Conterminous"]="14"
              ["Forever"]="15"
              ["Not on my mobile"]="16"
              ["No prolix"]="17"
              ["Clones"]="18"
              ["Needle"]="19"
              ["Gold pack"]="20"
              ["Endorphin"]="21"
              ["Never what it means"]="22"
              ["How you had me"]="23"
              ["I won't say it"]="24"
              ["On you"]="25"
              ["Little girl"]="26"
              ["Ogre"]="27"
              ["Living video record"]="28"
              ["So long"]="29"
              ["No telling"]="30"
              ["Pepperoni freestyle"]="31"
              ["May 1st"]="32"
              ["Plunge (Interlude)"]="33"
              ["Next to you"]="34"
              ["Above"]="35"
              ["Warden"]="36"
              ["Automatic"]="37"
              ["Colourful light"]="38"
              ["Gravity"]="39"
              ["Malady"]="40"
              ["Favourite girl"]="41"
              ["Baby sways"]="42"
              ["What she does"]="43"
            )
            missing_files=""
            # Loop through JSON files in the folder
            for file in "$folder"/*.json; do
              if [ -f "$file" ]; then
                # Extract title by removing .json extension
                filename=$(basename "$file" .json)
                title="$filename"
                echo "Processing file: $file (extracted title: $title)"
                # Convert title to lowercase and normalize separators for case-insensitive matching
                title_lower=$(echo "$title" | tr '[:upper:]' '[:lower:]')
                title_lower=$(echo "$title_lower" | sed "s/[']//g; s/[_-]/ /g; s/[^a-z0-9 ]//g")
                matched=false
                # Loop through title_map to find a match
                for list_title in "${!title_map[@]}"; do
                  list_title_lower=$(echo "$list_title" | tr '[:upper:]' '[:lower:]')
                  list_title_lower=$(echo "$list_title_lower" | sed "s/[']//g; s/[_-]/ /g; s/[^a-z0-9 ]//g")
                  # Check if all significant words in list_title appear in title_lower
                  match=true
                  # Split list_title into words (ignoring spaces, punctuation)
                  for word in $list_title_lower; do
                    if ! echo "$title_lower" | grep -q -w "$word"; then
                      match=false
                      break
                    fi
                  done
                  if [ "$match" = true ]; then
                    new_name="$folder/${title_map[$list_title]}.json"
                    echo "Matched '$title' to '$list_title', renaming to $new_name"
                    mv "$file" "$new_name" || echo "Failed to rename $file to $new_name"
                    matched=true
                    break
                  fi
                done
                if [ "$matched" = false ]; then
                  echo "No match found for '$title'"
                fi
              fi
            done
            # Check for missing files based on title_map
            for list_title in "${!title_map[@]}"; do
              number="${title_map[$list_title]}"
              if ! [ -f "$folder/$number.json" ]; then
                echo "File for '$list_title' not found, reserving $number.json"
                missing_files="$missing_files $number.json"
              fi
            done
            # Write missing files to missing_json_files.txt
            if [ -n "$missing_files" ]; then
              echo "Missing JSON files (reserved numbers): $missing_files"
              echo "Missing JSON files in json/Colourful Light (reserved numbers):" > missing_json_files.txt
              for file in $missing_files; do
                echo "$file" >> missing_json_files.txt
              done
            else
              echo "No missing JSON files in json/Colourful Light"
              echo "No missing JSON files in json/Colourful Light" > missing_json_files.txt
            fi
            echo "Contents of missing_json_files.txt:"
            cat missing_json_files.txt
          else
            echo "json/Colourful Light folder (any case) not found. Skipping renaming and logging."
            echo "json/Colourful Light folder not found" > missing_json_files.txt
          fi
          shopt -u nocaseglob

      # Step 4: Rename json/Colourful Light Folder to json/2
      - name: Rename Colourful Light Folder
        run: |
          echo "Renaming json/Colourful Light to json/2..."
          shopt -s nocaseglob
          folder=$(ls -d json/[Cc][Oo][Ll][Oo][Uu][Rr][Ff][Uu][Ll][[:space:][:punct:]]*[Ll][Ii][Gg][Hh][Tt] 2>/dev/null | head -n 1)
          if [ -n "$folder" ] && [ -d "$folder" ]; then
            if [ -d json/2 ]; then
              echo "json/2 already exists. Merging contents..."
              mv "$folder"/* json/2/ || echo "Failed to merge contents from $folder to json/2"
              rm -rf "$folder" || echo "Failed to remove $folder"
            else
              mv "$folder" json/2 || echo "Failed to rename $folder to json/2"
            fi
          else
            echo "json/Colourful Light folder (any case) not found. Skipping folder renaming."
          fi
          shopt -u nocaseglob
          echo "Listing contents of json after renaming:"
          ls -laR json

      # Step 5: Configure Git User
      - name: Configure Git User
        run: |
          echo "Configuring Git user..."
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # Step 6: Commit and Push Changes
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Adding json and missing_json_files.txt to git..."
          git add json missing_json_files.txt
          echo "Git status after add:"
          git status
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            echo "Committing changes..."
            git commit -m "${{ github.event.inputs.commit_message || 'Rename JSON files in json/Colourful Light to 14.json to 43.json, rename folder to json/2, and log missing files' }}"
            echo "Pushing changes..."
            git push origin main
          fi